/*!
 * EventEmitter v5.2.5 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - http://oli.me.uk/
 * @preserve
 */
!(function (e) { 'use strict'; function t () {} function n (e, t) { for (var n = e.length; n--;) if (e[n].listener === t) return n; return -1 } function r (e) { return function () { return this[e].apply(this, arguments) } } function i (e) { return typeof e === 'function' || e instanceof RegExp || !(!e || typeof e !== 'object') && i(e.listener) } var s = t.prototype; var o = e.EventEmitter; s.getListeners = function (e) { var t; var n; var r = this._getEvents(); if (e instanceof RegExp) { t = {}; for (n in r)r.hasOwnProperty(n) && e.test(n) && (t[n] = r[n]) } else t = r[e] || (r[e] = []); return t }, s.flattenListeners = function (e) { var t; var n = []; for (t = 0; t < e.length; t += 1)n.push(e[t].listener); return n }, s.getListenersAsObject = function (e) { var t; var n = this.getListeners(e); return n instanceof Array && (t = {}, t[e] = n), t || n }, s.addListener = function (e, t) { if (!i(t)) throw new TypeError('listener must be a function'); var r; var s = this.getListenersAsObject(e); var o = typeof t === 'object'; for (r in s)s.hasOwnProperty(r) && n(s[r], t) === -1 && s[r].push(o ? t : { listener: t, once: !1 }); return this }, s.on = r('addListener'), s.addOnceListener = function (e, t) { return this.addListener(e, { listener: t, once: !0 }) }, s.once = r('addOnceListener'), s.defineEvent = function (e) { return this.getListeners(e), this }, s.defineEvents = function (e) { for (var t = 0; t < e.length; t += 1) this.defineEvent(e[t]); return this }, s.removeListener = function (e, t) { var r; var i; var s = this.getListenersAsObject(e); for (i in s)s.hasOwnProperty(i) && (r = n(s[i], t)) !== -1 && s[i].splice(r, 1); return this }, s.off = r('removeListener'), s.addListeners = function (e, t) { return this.manipulateListeners(!1, e, t) }, s.removeListeners = function (e, t) { return this.manipulateListeners(!0, e, t) }, s.manipulateListeners = function (e, t, n) { var r; var i; var s = e ? this.removeListener : this.addListener; var o = e ? this.removeListeners : this.addListeners; if (typeof t !== 'object' || t instanceof RegExp) for (r = n.length; r--;)s.call(this, t, n[r]); else for (r in t)t.hasOwnProperty(r) && (i = t[r]) && (typeof i === 'function' ? s.call(this, r, i) : o.call(this, r, i)); return this }, s.removeEvent = function (e) { var t; var n = typeof e; var r = this._getEvents(); if (n === 'string') delete r[e]; else if (e instanceof RegExp) for (t in r)r.hasOwnProperty(t) && e.test(t) && delete r[t]; else delete this._events; return this }, s.removeAllListeners = r('removeEvent'), s.emitEvent = function (e, t) { var n; var r; var i; var s; var o = this.getListenersAsObject(e); for (s in o) if (o.hasOwnProperty(s)) for (n = o[s].slice(0), i = 0; i < n.length; i++)r = n[i], !0 === r.once && this.removeListener(e, r.listener), r.listener.apply(this, t || []) === this._getOnceReturnValue() && this.removeListener(e, r.listener); return this }, s.trigger = r('emitEvent'), s.emit = function (e) { var t = Array.prototype.slice.call(arguments, 1); return this.emitEvent(e, t) }, s.setOnceReturnValue = function (e) { return this._onceReturnValue = e, this }, s._getOnceReturnValue = function () { return !this.hasOwnProperty('_onceReturnValue') || this._onceReturnValue }, s._getEvents = function () { return this._events || (this._events = {}) }, t.noConflict = function () { return e.EventEmitter = o, t }, typeof define === 'function' && define.amd ? define(function () { return t }) : typeof module === 'object' && module.exports ? module.exports = t : e.EventEmitter = t }(typeof window !== 'undefined' ? window : this || {}))
