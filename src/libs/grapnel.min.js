/****
 * Grapnel
 * https://github.com/baseprime/grapnel
 *
 * @author Greg Sabia Tucker <greg@narrowlabs.com>
 * @link http://basepri.me
 *
 * Released under MIT License. See LICENSE.txt or http://opensource.org/licenses/MIT
*/

!(function (a) { function b (b) { 'use strict'; var c = this; return this.events = {}, this.state = null, this.options = b || {}, this.options.env = this.options.env || (Object.keys(a).length === 0 && process && process.browser !== !0 ? 'server' : 'client'), this.options.mode = this.options.mode || (this.options.env !== 'server' && this.options.pushState && a.history && a.history.pushState ? 'pushState' : 'hashchange'), this.version = '0.6.4', typeof a.addEventListener === 'function' && (a.addEventListener('hashchange', function () { c.trigger('hashchange') }), a.addEventListener('popstate', function (a) { return (!c.state || c.state.previousState !== null) && void c.trigger('navigate') })), this } function c (a, b) { this.stack = c.global.slice(0), this.router = a, this.runCallback = !0, this.callbackRan = !1, this.propagateEvent = !0, this.value = a.path(); for (var d in b) this[d] = b[d]; return this } function d (a) { this.route = a, this.keys = [], this.regex = b.regexRoute(a, this.keys) }b.regexRoute = function (a, b, c, d) { return a instanceof RegExp ? a : (a instanceof Array && (a = '(' + a.join('|') + ')'), a = a.concat(d ? '' : '/?').replace(/\/\(/g, '(?:/').replace(/\+/g, '__plus__').replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g, function (a, c, d, e, f, g) { return b.push({ name: e, optional: !!g }), c = c || '', '' + (g ? '' : c) + '(?:' + (g ? c : '') + (d || '') + (f || d && '([^/.]+?)' || '([^/]+?)') + ')' + (g || '') }).replace(/([\/.])/g, '\\$1').replace(/__plus__/g, '(.+)').replace(/\*/g, '(.*)'), new RegExp('^' + a + '$', c ? '' : 'i')) }, b._forEach = function (a, b) { return typeof Array.prototype.forEach === 'function' ? Array.prototype.forEach.call(a, b) : (function (a, b) { for (var c = 0, d = this.length; c < d; ++c)a.call(b, this[c], c, this) }.call(a, b)) }, b.prototype.get = b.prototype.add = function (a) { var b = this; var e = Array.prototype.slice.call(arguments, 1, -1); var f = Array.prototype.slice.call(arguments, -1)[0]; var g = new d(a); var h = function () { var d = g.parse(b.path()); if (d.match) { var h = { route: a, params: d.params, req: d, regex: d.match }; var i = new c(b, h).enqueue(e.concat(f)); if (b.trigger('match', i, d), !i.runCallback) return b; if (i.previousState = b.state, b.state = i, i.parent() && i.parent().propagateEvent === !1) return i.propagateEvent = !1, b; i.callback() } return b }; var i = b.options.mode !== 'pushState' && b.options.env !== 'server' ? 'hashchange' : 'navigate'; return h().on(i, h) }, b.prototype.trigger = function (a) { var c = this; var d = Array.prototype.slice.call(arguments, 1); return this.events[a] && b._forEach(this.events[a], function (a) { a.apply(c, d) }), this }, b.prototype.on = b.prototype.bind = function (a, c) { var d = this; var e = a.split(' '); return b._forEach(e, function (a) { d.events[a] ? d.events[a].push(c) : d.events[a] = [c] }), this }, b.prototype.once = function (a, b) { var c = !1; return this.on(a, function () { return !c && (c = !0, b.apply(this, arguments), b = null, !0) }) }, b.prototype.context = function (a) { var b = this; var c = Array.prototype.slice.call(arguments, 1); return function () { var d = arguments[0]; var e = arguments.length > 2 ? Array.prototype.slice.call(arguments, 1, -1) : []; var f = Array.prototype.slice.call(arguments, -1)[0]; var g = a.slice(-1) !== '/' && d !== '/' && d !== '' ? a + '/' : a; var h = d.substr(0, 1) !== '/' ? d : d.substr(1); var i = g + h; return b.add.apply(b, [i].concat(c).concat(e).concat([f])) } }, b.prototype.navigate = function (a) { return this.path(a).trigger('navigate') }, b.prototype.path = function (b) { var c; var d = this; return typeof b === 'string' ? (d.options.mode === 'pushState' ? (c = d.options.root ? d.options.root + b : b, a.history.pushState({}, null, c)) : a.location ? a.location.hash = (d.options.hashBang ? '!' : '') + b : a._pathname = b || '', this) : typeof b === 'undefined' ? c = d.options.mode === 'pushState' ? a.location.pathname.replace(d.options.root, '') : d.options.mode !== 'pushState' && a.location ? a.location.hash ? a.location.hash.split(d.options.hashBang ? '#!' : '#')[1] : '' : a._pathname || '' : b === !1 ? (d.options.mode === 'pushState' ? a.history.pushState({}, null, d.options.root || '/') : a.location && (a.location.hash = d.options.hashBang ? '!' : ''), d) : void 0 }, b.listen = function () { var a, c; return arguments[0] && arguments[1] ? (a = arguments[0], c = arguments[1]) : c = arguments[0], (function () { for (var a in c) this.add.call(this, a, c[a]); return this }.call(new b(a || {}))) }, c.global = [], c.prototype.preventDefault = function () { this.runCallback = !1 }, c.prototype.stopPropagation = function () { this.propagateEvent = !1 }, c.prototype.parent = function () { var a = !(!this.previousState || !this.previousState.value || this.previousState.value != this.value); return !!a && this.previousState }, c.prototype.callback = function () { this.callbackRan = !0, this.timeStamp = Date.now(), this.next() }, c.prototype.enqueue = function (a, b) { for (var c = Array.isArray(a) ? b < a.length ? a.reverse() : a : [a]; c.length;) this.stack.splice(b || this.stack.length + 1, 0, c.shift()); return this }, c.prototype.next = function () { var a = this; return this.stack.shift().call(this.router, this.req, this, function () { a.next.call(a) }) }, d.prototype.parse = function (a) { var c = a.match(this.regex); var d = this; var e = { params: {}, keys: this.keys, matches: (c || []).slice(1), match: c }; return b._forEach(e.matches, function (a, b) { var c = d.keys[b] && d.keys[b].name ? d.keys[b].name : b; e.params[c] = a ? decodeURIComponent(a) : void 0 }), e }, b.CallStack = c, b.Request = d, typeof a.define !== 'function' || a.define.amd.grapnel ? typeof module === 'object' && typeof module.exports === 'object' ? module.exports = exports = b : a.Grapnel = b : a.define(function (c, d, e) { return a.define.amd.grapnel = !0, b }) }.call({}, typeof window === 'object' ? window : this))
